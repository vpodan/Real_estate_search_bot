#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –≥–∏–±—Ä–∏–¥–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ —Å –ø—Ä–æ—Å—Ç—ã–º –∑–∞–ø—Ä–æ—Å–æ–º - –£–õ–£–ß–®–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø
–ò—â–µ—Ç –í–°–ï –æ–±—ä—è–≤–ª–µ–Ω–∏—è –≤ MongoDB, –ø—Ä–æ–≤–æ–¥–∏—Ç —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–∏—Å–∫ –ø–æ –≤—Å–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–º,
–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–æ–ø-5 –ø–æ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–º—É —Å–∫–æ—Ä—É
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from main import extract_criteria_from_prompt
from hybrid_search import HybridRealEstateSearch

def test_hybrid_simple():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–∏–±—Ä–∏–¥–Ω—ã–π –ø–æ–∏—Å–∫ —Å –ø—Ä–æ—Å—Ç—ã–º –∑–∞–ø—Ä–æ—Å–æ–º"""
    
    print("üîç –¢–ï–°–¢ –ì–ò–ë–†–ò–î–ù–û–ì–û –ü–û–ò–°–ö–ê - –£–õ–£–ß–®–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø")
    print("=" * 60)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≥–∏–±—Ä–∏–¥–Ω—É—é —Å–∏—Å—Ç–µ–º—É
    hybrid_system = HybridRealEstateSearch()
    
    # –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å
    query = "–ò—â—É 2-–∫–æ–º–Ω–∞—Ç–Ω—É—é –∫–≤–∞—Ä—Ç–∏—Ä—É –≤ –í–∞—Ä—à–∞–≤–µ –¥–æ 800000 –∑–ª–æ—Ç—ã—Ö —Å –±–∞–ª–∫–æ–Ω–æ–º –∏ –≥–∞—Ä–∞–∂–æ–º, –Ω–µ —Å—Ç–∞—Ä—à–µ 2015 –≥–æ–¥–∞ –ø–æ—Å—Ç—Ä–æ–π–∫–∏, —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º —Ä–µ–º–æ–Ω—Ç–æ–º –∏ —É–¥–æ–±–Ω—ã–º –±—ã—Å—Ç—Ä—ã–º –ø—Ä–æ–µ–∑–¥–æ–º –∫ —Ü–µ–Ω—Ç—Ä—É."
    print(f"–ó–∞–ø—Ä–æ—Å: '{query}'")
    print("-" * 60)
    
    # –®–∞–≥ 1: –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤
    print("üìù –®–∞–≥ 1: –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤ —á–µ—Ä–µ–∑ LLM...")
    try:
        criteria = extract_criteria_from_prompt(query)
        print(f"‚úÖ –ö—Ä–∏—Ç–µ—Ä–∏–∏ –∏–∑–≤–ª–µ—á–µ–Ω—ã:")
        for key, value in criteria.items():
            if value is not None:
                print(f"   {key}: {value}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤: {e}")
        return
    
    # –®–∞–≥ 2: –ì–∏–±—Ä–∏–¥–Ω—ã–π –ø–æ–∏—Å–∫
    print("\nüîç –®–∞–≥ 2: –ì–∏–±—Ä–∏–¥–Ω—ã–π –ø–æ–∏—Å–∫ (MongoDB + —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π)...")
    try:
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –æ–±—ä—è–≤–ª–µ–Ω–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤
        transaction_type = criteria.get("transaction_type")
        if transaction_type == "kupno":
            listing_type = "sale"
        elif transaction_type == "wynajem":
            listing_type = "rent"
        else:
            # –ï—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω —Ç–∏–ø —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏, –∏—â–µ–º –≤ –æ–±–µ–∏—Ö –∫–æ–ª–ª–µ–∫—Ü–∏—è—Ö
            listing_type = "both"
        
        print(f"üéØ –¢–∏–ø –ø–æ–∏—Å–∫–∞: {listing_type}")
        
        # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º —Ñ–∏–ª—å—Ç—Ä—ã –∏–∑ –∏–∑–≤–ª–µ—á–µ–Ω–Ω—ã—Ö –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤
        filters = {}
        
        # –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã
        if criteria.get("city"):
            filters["city"] = criteria["city"]
        if criteria.get("district"):
            filters["district"] = criteria["district"]
        if criteria.get("max_price"):
            filters["max_price"] = criteria["max_price"]
        if criteria.get("room_count"):
            filters["rooms"] = criteria["room_count"]  # –ò—Å–ø–æ–ª—å–∑—É–µ–º "rooms" –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å hybrid_search
        if criteria.get("space_sm"):
            filters["min_area"] = criteria["space_sm"]
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã
        if criteria.get("market_type"):
            filters["market_type"] = criteria["market_type"]
        if criteria.get("stan_wykonczenia"):
            filters["stan_wykonczenia"] = criteria["stan_wykonczenia"]
        if criteria.get("building_material"):
            filters["building_material"] = criteria["building_material"]
        if criteria.get("building_type"):
            filters["building_type"] = criteria["building_type"]
        if criteria.get("ogrzewanie"):
            filters["ogrzewanie"] = criteria["ogrzewanie"]
        
        # –§–∏–ª—å—Ç—Ä—ã –ø–æ –≥–æ–¥—É –ø–æ—Å—Ç—Ä–æ–π–∫–∏
        if criteria.get("min_build_year"):
            filters["min_build_year"] = criteria["min_build_year"]
        if criteria.get("max_build_year"):
            filters["max_build_year"] = criteria["max_build_year"]
        
        # –§–∏–ª—å—Ç—Ä –ø–æ —á–∏–Ω—à—É (–¥–ª—è –∞—Ä–µ–Ω–¥—ã)
        if criteria.get("max_czynsz"):
            filters["max_czynsz"] = criteria["max_czynsz"]
        
        # Boolean —Ñ–∏–ª—å—Ç—Ä—ã
        if criteria.get("has_garage") is not None:
            filters["has_garage"] = criteria["has_garage"]
        if criteria.get("has_parking") is not None:
            filters["has_parking"] = criteria["has_parking"]
        if criteria.get("has_balcony") is not None:
            filters["has_balcony"] = criteria["has_balcony"]
        if criteria.get("has_elevator") is not None:
            filters["has_elevator"] = criteria["has_elevator"]
        if criteria.get("has_air_conditioning") is not None:
            filters["has_air_conditioning"] = criteria["has_air_conditioning"]
        if criteria.get("pets_allowed") is not None:
            filters["pets_allowed"] = criteria["pets_allowed"]
        if criteria.get("furnished") is not None:
            filters["furnished"] = criteria["furnished"]
        
        print(f"üîç –ü—Ä–∏–º–µ–Ω—è–µ–º—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã: {filters}")
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º –≥–∏–±—Ä–∏–¥–Ω—ã–π –ø–æ–∏—Å–∫ —Å –±–æ–ª—å—à–∏–º –ª–∏–º–∏—Ç–æ–º –¥–ª—è MongoDB
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ª–∏–º–∏—Ç 1000 –¥–ª—è MongoDB, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –í–°–ï –≤–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        hybrid_results = hybrid_system.search(
            filters=filters,
            semantic_query=query,  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –¥–ª—è —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–∏—Å–∫–∞
            listing_type=listing_type,
            limit=1000  # –ë–æ–ª—å—à–æ–π –ª–∏–º–∏—Ç –¥–ª—è MongoDB
        )
        
        # –ë–µ—Ä–µ–º —Ç–æ–ª—å–∫–æ —Ç–æ–ø-5 –ø–æ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–º—É —Å–∫–æ—Ä—É
        top_results = hybrid_results[:5]
        
        print(f"‚úÖ –ì–∏–±—Ä–∏–¥–Ω—ã–π –ø–æ–∏—Å–∫ –∑–∞–≤–µ—Ä—à–µ–Ω. –ù–∞–π–¥–µ–Ω–æ: {len(hybrid_results)} –æ–±—ä—è–≤–ª–µ–Ω–∏–π")
        print(f"üéØ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ø-5 –ø–æ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–º—É —Å–∫–æ—Ä—É")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        if top_results:
            print(f"\nüìã –¢–æ–ø 5 —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:")
            for j, result in enumerate(top_results, 1):
                print(f"\n--- –†–µ–∑—É–ª—å—Ç–∞—Ç {j} ---")
                print(f"ID: {result.get('_id', 'N/A')}")
                print(f"–ó–∞–≥–æ–ª–æ–≤–æ–∫: {result.get('title', 'N/A')}")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π —Å–∫–æ—Ä –µ—Å–ª–∏ –µ—Å—Ç—å
                if 'semantic_score' in result:
                    print(f"–°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π —Å–∫–æ—Ä: {result['semantic_score']:.3f} (–∫–æ—Å–∏–Ω—É—Å–Ω–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ: —á–µ–º –±–ª–∏–∂–µ –∫ 1, —Ç–µ–º –ª—É—á—à–µ)")
                
                print(f"–¶–µ–Ω–∞: {result.get('price', 'N/A')} –∑–ª")
                print(f"–ö–æ–º–Ω–∞—Ç—ã: {result.get('room_count', 'N/A')}")
                print(f"–ü–ª–æ—â–∞–¥—å: {result.get('space_sm', 'N/A')} –º¬≤")
                print(f"–ì–æ—Ä–æ–¥: {result.get('city', 'N/A')}")
                print(f"–†–∞–π–æ–Ω: {result.get('district', 'N/A')}")
                print(f"–°—Å—ã–ª–∫–∞: {result.get('link', 'N/A')}")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
                features = []
                if result.get('has_garage'):
                    features.append("–≥–∞—Ä–∞–∂")
                if result.get('has_parking'):
                    features.append("–ø–∞—Ä–∫–æ–≤–∫–∞")
                if result.get('has_balcony'):
                    features.append("–±–∞–ª–∫–æ–Ω")
                if result.get('has_elevator'):
                    features.append("–ª–∏—Ñ—Ç")
                if result.get('has_air_conditioning'):
                    features.append("–∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä")
                if result.get('pets_allowed'):
                    features.append("–∂–∏–≤–æ—Ç–Ω—ã–µ —Ä–∞–∑—Ä–µ—à–µ–Ω—ã")
                if result.get('furnished'):
                    features.append("–º–µ–±–ª–∏—Ä–æ–≤–∞–Ω–Ω–∞—è")
                
                if features:
                    print(f"–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏: {', '.join(features)}")
                    
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
                if result.get('market_type'):
                    print(f"–¢–∏–ø —Ä—ã–Ω–∫–∞: {result.get('market_type')}")
                if result.get('stan_wykonczenia'):
                    print(f"–°–æ—Å—Ç–æ—è–Ω–∏–µ: {result.get('stan_wykonczenia')}")
                if result.get('build_year'):
                    print(f"–ì–æ–¥ –ø–æ—Å—Ç—Ä–æ–π–∫–∏: {result.get('build_year')}")
                if result.get('building_material'):
                    print(f"–ú–∞—Ç–µ—Ä–∏–∞–ª: {result.get('building_material')}")
                if result.get('ogrzewanie'):
                    print(f"–û—Ç–æ–ø–ª–µ–Ω–∏–µ: {result.get('ogrzewanie')}")
        else:
            print("‚ùå –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≥–∏–±—Ä–∏–¥–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_hybrid_simple()
