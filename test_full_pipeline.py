#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø–æ–ª–Ω–æ–π —Å–≤—è–∑–∫–∏: —Å–ª–æ–≤–µ—Å–Ω—ã–π –∑–∞–ø—Ä–æ—Å ‚Üí LLM ‚Üí MongoDB ‚Üí —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–∏—Å–∫ ‚Üí —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from main import extract_criteria_from_prompt, search_listings
from hybrid_search import HybridRealEstateSearch

def test_full_pipeline():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª–Ω—É—é —Å–≤—è–∑–∫—É –æ—Ç —Å–ª–æ–≤–µ—Å–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –¥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤"""
    
    print("üöÄ –¢–ï–°–¢ –ü–û–õ–ù–û–ô –°–í–Ø–ó–ö–ò: –°–õ–û–í–ï–°–ù–´–ô –ó–ê–ü–†–û–° ‚Üí LLM ‚Üí MONGODB ‚Üí –°–ï–ú–ê–ù–¢–ò–ß–ï–°–ö–ò–ô –ü–û–ò–°–ö")
    print("=" * 80)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≥–∏–±—Ä–∏–¥–Ω—É—é —Å–∏—Å—Ç–µ–º—É –ø–æ–∏—Å–∫–∞
    hybrid_system = HybridRealEstateSearch()
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã
    test_queries = [
        "–ò—â—É 2-–∫–æ–º–Ω–∞—Ç–Ω—É—é –∫–≤–∞—Ä—Ç–∏—Ä—É –≤ –í–∞—Ä—à–∞–≤–µ —Å –±–∞–ª–∫–æ–Ω–æ–º, –¥–æ 800000 –∑–ª–æ—Ç—ã—Ö",
        "–ù—É–∂–Ω–∞ –∫–≤–∞—Ä—Ç–∏—Ä–∞ –≤ –ì–¥–∞–Ω—å—Å–∫–µ —Å –≥–∞—Ä–∞–∂–æ–º –∏ –ª–∏—Ñ—Ç–æ–º, –¥–æ 3000 –∑–ª–æ—Ç—ã—Ö –≤ –º–µ—Å—è—Ü",
        "–•–æ—á—É –∫—É–ø–∏—Ç—å 3-–∫–æ–º–Ω–∞—Ç–Ω—É—é –∫–≤–∞—Ä—Ç–∏—Ä—É –≤ –∫–∏—Ä–ø–∏—á–Ω–æ–º –¥–æ–º–µ, –ø–æ—Å—Ç—Ä–æ–µ–Ω–Ω—É—é –ø–æ—Å–ª–µ 2010 –≥–æ–¥–∞, –¥–æ 1.5 –º–ª–Ω –∑–ª–æ—Ç—ã—Ö",
        "–ò—â—É –∫–≤–∞—Ä—Ç–∏—Ä—É —Å –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä–æ–º –∏ –ø–∞—Ä–∫–æ–≤–∫–æ–π, –¥–æ 600000 –∑–ª–æ—Ç—ã—Ö"
    ]
    
    for i, query in enumerate(test_queries, 1):
        print(f"\n{'='*20} –¢–ï–°–¢ {i} {'='*20}")
        print(f"üîç –°–ª–æ–≤–µ—Å–Ω—ã–π –∑–∞–ø—Ä–æ—Å: '{query}'")
        print("-" * 60)
        
        # –®–∞–≥ 1: –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤ —á–µ—Ä–µ–∑ LLM
        print("üìù –®–∞–≥ 1: –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤ —á–µ—Ä–µ–∑ LLM...")
        try:
            criteria = extract_criteria_from_prompt(query)
            print(f"‚úÖ –ö—Ä–∏—Ç–µ—Ä–∏–∏ –∏–∑–≤–ª–µ—á–µ–Ω—ã: {criteria}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤: {e}")
            continue
        
        # –®–∞–≥ 2: –ü–æ–∏—Å–∫ —á–µ—Ä–µ–∑ MongoDB (—Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π)
        print("\nüîç –®–∞–≥ 2: –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–∏—Å–∫ —á–µ—Ä–µ–∑ MongoDB...")
        try:
            mongo_results = search_listings(criteria)
            print(f"‚úÖ MongoDB –Ω–∞—à–µ–ª: {mongo_results['total']} –æ–±—ä—è–≤–ª–µ–Ω–∏–π")
            
            if mongo_results['total'] == 0:
                print("‚ùå –û–±—ä—è–≤–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ MongoDB")
                continue
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ MongoDB –ø–æ–∏—Å–∫–∞: {e}")
            continue
        
        # –®–∞–≥ 3: –ì–∏–±—Ä–∏–¥–Ω—ã–π –ø–æ–∏—Å–∫ (MongoDB + —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π)
        print("\nüîç –®–∞–≥ 3: –ì–∏–±—Ä–∏–¥–Ω—ã–π –ø–æ–∏—Å–∫ (MongoDB + —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π)...")
        try:
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –æ–±—ä—è–≤–ª–µ–Ω–∏–π
            listing_type = "buy" if criteria.get("transaction_type") == "kupno" else "rent"
            
            # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º —Ñ–∏–ª—å—Ç—Ä—ã –¥–ª—è –≥–∏–±—Ä–∏–¥–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞
            filters = {}
            if criteria.get("city"):
                filters["city"] = criteria["city"]
            if criteria.get("max_price"):
                filters["max_price"] = criteria["max_price"]
            if criteria.get("room_count"):
                filters["room_count"] = criteria["room_count"]
            if criteria.get("market_type"):
                filters["market_type"] = criteria["market_type"]
            if criteria.get("stan_wykonczenia"):
                filters["stan_wykonczenia"] = criteria["stan_wykonczenia"]
            if criteria.get("min_build_year"):
                filters["min_build_year"] = criteria["min_build_year"]
            if criteria.get("max_build_year"):
                filters["max_build_year"] = criteria["max_build_year"]
            if criteria.get("building_material"):
                filters["building_material"] = criteria["building_material"]
            if criteria.get("building_type"):
                filters["building_type"] = criteria["building_type"]
            if criteria.get("ogrzewanie"):
                filters["ogrzewanie"] = criteria["ogrzewanie"]
            if criteria.get("max_czynsz"):
                filters["max_czynsz"] = criteria["max_czynsz"]
            if criteria.get("has_garage") is not None:
                filters["has_garage"] = criteria["has_garage"]
            if criteria.get("has_parking") is not None:
                filters["has_parking"] = criteria["has_parking"]
            if criteria.get("has_balcony") is not None:
                filters["has_balcony"] = criteria["has_balcony"]
            if criteria.get("has_elevator") is not None:
                filters["has_elevator"] = criteria["has_elevator"]
            if criteria.get("has_air_conditioning") is not None:
                filters["has_air_conditioning"] = criteria["has_air_conditioning"]
            if criteria.get("pets_allowed") is not None:
                filters["pets_allowed"] = criteria["pets_allowed"]
            if criteria.get("furnished") is not None:
                filters["furnished"] = criteria["furnished"]
            
            # –í—ã–ø–æ–ª–Ω—è–µ–º –≥–∏–±—Ä–∏–¥–Ω—ã–π –ø–æ–∏—Å–∫
            hybrid_results = hybrid_system.search(
                filters=filters,
                semantic_query=query,  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –¥–ª—è —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–∏—Å–∫–∞
                listing_type=listing_type,
                limit=5
            )
            
            print(f"‚úÖ –ì–∏–±—Ä–∏–¥–Ω—ã–π –ø–æ–∏—Å–∫ –∑–∞–≤–µ—Ä—à–µ–Ω. –ù–∞–π–¥–µ–Ω–æ: {len(hybrid_results)} –æ–±—ä—è–≤–ª–µ–Ω–∏–π")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
            if hybrid_results:
                print(f"\nüìã –¢–æ–ø {len(hybrid_results)} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:")
                for j, result in enumerate(hybrid_results, 1):
                    print(f"\n--- –†–µ–∑—É–ª—å—Ç–∞—Ç {j} ---")
                    print(f"ID: {result.get('_id', 'N/A')}")
                    print(f"–ó–∞–≥–æ–ª–æ–≤–æ–∫: {result.get('title', 'N/A')}")
                    
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π —Å–∫–æ—Ä –µ—Å–ª–∏ –µ—Å—Ç—å
                    if 'semantic_score' in result:
                        print(f"–°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π —Å–∫–æ—Ä: {result['semantic_score']:.3f} (–∫–æ—Å–∏–Ω—É—Å–Ω–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ: —á–µ–º –±–ª–∏–∂–µ –∫ 1, —Ç–µ–º –ª—É—á—à–µ)")
                    
                    print(f"–¶–µ–Ω–∞: {result.get('price', 'N/A')} –∑–ª")
                    print(f"–ö–æ–º–Ω–∞—Ç—ã: {result.get('room_count', 'N/A')}")
                    print(f"–ü–ª–æ—â–∞–¥—å: {result.get('space_sm', 'N/A')} –º¬≤")
                    print(f"–ì–æ—Ä–æ–¥: {result.get('city', 'N/A')}")
                    print(f"–†–∞–π–æ–Ω: {result.get('district', 'N/A')}")
                    print(f"–°—Å—ã–ª–∫–∞: {result.get('link', 'N/A')}")
                    
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
                    features = []
                    if result.get('has_garage'):
                        features.append("–≥–∞—Ä–∞–∂")
                    if result.get('has_parking'):
                        features.append("–ø–∞—Ä–∫–æ–≤–∫–∞")
                    if result.get('has_balcony'):
                        features.append("–±–∞–ª–∫–æ–Ω")
                    if result.get('has_elevator'):
                        features.append("–ª–∏—Ñ—Ç")
                    if result.get('has_air_conditioning'):
                        features.append("–∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä")
                    if result.get('pets_allowed'):
                        features.append("–∂–∏–≤–æ—Ç–Ω—ã–µ —Ä–∞–∑—Ä–µ—à–µ–Ω—ã")
                    if result.get('furnished'):
                        features.append("–º–µ–±–ª–∏—Ä–æ–≤–∞–Ω–Ω–∞—è")
                    
                    if features:
                        print(f"–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏: {', '.join(features)}")
                    
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
                    if result.get('market_type'):
                        print(f"–¢–∏–ø —Ä—ã–Ω–∫–∞: {result['market_type']}")
                    if result.get('stan_wykonczenia'):
                        print(f"–°–æ—Å—Ç–æ—è–Ω–∏–µ: {result['stan_wykonczenia']}")
                    if result.get('build_year'):
                        print(f"–ì–æ–¥ –ø–æ—Å—Ç—Ä–æ–π–∫–∏: {result['build_year']}")
                    if result.get('building_material'):
                        print(f"–ú–∞—Ç–µ—Ä–∏–∞–ª: {result['building_material']}")
                    if result.get('ogrzewanie'):
                        print(f"–û—Ç–æ–ø–ª–µ–Ω–∏–µ: {result['ogrzewanie']}")
                    if result.get('czynsz'):
                        print(f"–ß–∏–Ω—à: {result['czynsz']} –∑–ª")
            else:
                print("‚ùå –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≥–∏–±—Ä–∏–¥–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞: {e}")
            continue
        
        print(f"\n{'='*60}")
    
    print("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–π —Å–≤—è–∑–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    test_full_pipeline()
