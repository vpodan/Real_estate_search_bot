#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã LLM –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤ –∏ –ø–æ–∏—Å–∫–∞
"""

import json
import logging
from main import extract_criteria_from_prompt, search_listings
from pymongo import MongoClient

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def test_llm_extraction_and_search(prompt_text):
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª–Ω—É—é —Ü–µ–ø–æ—á–∫—É: LLM –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤ -> –ø–æ–∏—Å–∫ –≤ MongoDB
    """
    print(f"üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å: '{prompt_text}'")
    print("=" * 80)
    
    # –®–∞–≥ 1: –ò–∑–≤–ª–µ–∫–∞–µ–º –∫—Ä–∏—Ç–µ—Ä–∏–∏ —á–µ—Ä–µ–∑ LLM
    print("üìù –®–∞–≥ 1: –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤ —á–µ—Ä–µ–∑ LLM...")
    try:
        criteria_result = extract_criteria_from_prompt(prompt_text)
        print(f"‚úÖ –ö—Ä–∏—Ç–µ—Ä–∏–∏ –∏–∑–≤–ª–µ—á–µ–Ω—ã: {json.dumps(criteria_result, indent=2, ensure_ascii=False)}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤: {e}")
        return
    
    # –®–∞–≥ 2: –í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–∏—Å–∫
    print("\nüîç –®–∞–≥ 2: –ü–æ–∏—Å–∫ –æ–±—ä—è–≤–ª–µ–Ω–∏–π...")
    try:
        search_result = search_listings(criteria_result)
        print(f"‚úÖ –ü–æ–∏—Å–∫ –∑–∞–≤–µ—Ä—à–µ–Ω. –ù–∞–π–¥–µ–Ω–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–π: {len(search_result.get('listings', []))}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        listings = search_result.get('listings', [])
        if listings:
            print(f"\nüìã –ü–µ—Ä–≤—ã–µ {min(3, len(listings))} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:")
            for i, listing in enumerate(listings[:3], 1):
                print(f"\n--- –†–µ–∑—É–ª—å—Ç–∞—Ç {i} ---")
                print(f"ID: {listing.get('_id', 'N/A')}")
                print(f"–ó–∞–≥–æ–ª–æ–≤–æ–∫: {listing.get('title', 'N/A')}")
                print(f"–¶–µ–Ω–∞: {listing.get('price', 'N/A')} –∑–ª")
                print(f"–ö–æ–º–Ω–∞—Ç—ã: {listing.get('room_count', 'N/A')}")
                print(f"–ü–ª–æ—â–∞–¥—å: {listing.get('space_sm', 'N/A')} –º¬≤")
                print(f"–ì–æ—Ä–æ–¥: {listing.get('city', 'N/A')}")
                print(f"–†–∞–π–æ–Ω: {listing.get('district', 'N/A')}")
                print(f"–°—Å—ã–ª–∫–∞: {listing.get('link', 'N/A')}")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –µ—Å–ª–∏ –µ—Å—Ç—å
                if listing.get('market_type'):
                    print(f"–¢–∏–ø —Ä—ã–Ω–∫–∞: {listing.get('market_type')}")
                if listing.get('stan_wykonczenia'):
                    print(f"–°–æ—Å—Ç–æ—è–Ω–∏–µ: {listing.get('stan_wykonczenia')}")
                if listing.get('build_year'):
                    print(f"–ì–æ–¥ –ø–æ—Å—Ç—Ä–æ–π–∫–∏: {listing.get('build_year')}")
                if listing.get('building_material'):
                    print(f"–ú–∞—Ç–µ—Ä–∏–∞–ª: {listing.get('building_material')}")
                if listing.get('ogrzewanie'):
                    print(f"–û—Ç–æ–ø–ª–µ–Ω–∏–µ: {listing.get('ogrzewanie')}")
                if listing.get('czynsz'):
                    print(f"–ß–∏–Ω—à: {listing.get('czynsz')} –∑–ª")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
                features = []
                if listing.get('has_garage'):
                    features.append("–≥–∞—Ä–∞–∂")
                if listing.get('has_parking'):
                    features.append("–ø–∞—Ä–∫–æ–≤–∫–∞")
                if listing.get('has_balcony'):
                    features.append("–±–∞–ª–∫–æ–Ω")
                if listing.get('has_elevator'):
                    features.append("–ª–∏—Ñ—Ç")
                if listing.get('has_air_conditioning'):
                    features.append("–∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä")
                if listing.get('pets_allowed'):
                    features.append("–∂–∏–≤–æ—Ç–Ω—ã–µ —Ä–∞–∑—Ä–µ—à–µ–Ω—ã")
                if listing.get('furnished'):
                    features.append("–º–µ–±–ª–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ")
                
                if features:
                    print(f"–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏: {', '.join(features)}")
        else:
            print("‚ùå –û–±—ä—è–≤–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞: {e}")

def test_multiple_queries():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
    """
    test_queries = [
        "–ò—â—É 2-–∫–æ–º–Ω–∞—Ç–Ω—É—é –∫–≤–∞—Ä—Ç–∏—Ä—É –≤ –í–∞—Ä—à–∞–≤–µ –¥–æ 800000 –∑–ª–æ—Ç—ã—Ö",
        "–ù—É–∂–Ω–∞ –∫–≤–∞—Ä—Ç–∏—Ä–∞ –≤ –ì–¥–∞–Ω—å—Å–∫–µ —Å –±–∞–ª–∫–æ–Ω–æ–º, –¥–æ 3000 –∑–ª–æ—Ç—ã—Ö –≤ –º–µ—Å—è—Ü",
        "–•–æ—á—É –∫—É–ø–∏—Ç—å 3-–∫–æ–º–Ω–∞—Ç–Ω—É—é –∫–≤–∞—Ä—Ç–∏—Ä—É –≤ –∫–∏—Ä–ø–∏—á–Ω–æ–º –¥–æ–º–µ, –ø–æ—Å—Ç—Ä–æ–µ–Ω–Ω—É—é –ø–æ—Å–ª–µ 2010 –≥–æ–¥–∞, –¥–æ 1.5 –º–ª–Ω –∑–ª–æ—Ç—ã—Ö",
        "–ò—â—É –∫–≤–∞—Ä—Ç–∏—Ä—É –≤ –Ω–æ–≤–æ—Å—Ç—Ä–æ–π–∫–µ (PRIMARY) –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –≥–æ—Ç–æ–≤–æ–º –∫ –∑–∞—Å–µ–ª–µ–Ω–∏—é, –¥–æ 2 –º–ª–Ω –∑–ª–æ—Ç—ã—Ö",
        "–ù—É–∂–Ω–∞ –∫–≤–∞—Ä—Ç–∏—Ä–∞ —Å –≥–∞–∑–æ–≤—ã–º –æ—Ç–æ–ø–ª–µ–Ω–∏–µ–º, –¥–æ 4000 –∑–ª–æ—Ç—ã—Ö –≤ –º–µ—Å—è—Ü, –≤–∫–ª—é—á–∞—è —á–∏–Ω—à –¥–æ 800 –∑–ª–æ—Ç—ã—Ö",
        "–ò—â—É –∫–≤–∞—Ä—Ç–∏—Ä—É —Å –≥–∞—Ä–∞–∂–æ–º –∏ –ª–∏—Ñ—Ç–æ–º, –¥–æ 1 –º–ª–Ω –∑–ª–æ—Ç—ã—Ö",
        "–ù—É–∂–Ω–∞ –º–µ–±–ª–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞ —Å –±–∞–ª–∫–æ–Ω–æ–º, –≥–¥–µ —Ä–∞–∑—Ä–µ—à–µ–Ω—ã –∂–∏–≤–æ—Ç–Ω—ã–µ, –¥–æ 2500 –∑–ª–æ—Ç—ã—Ö –≤ –º–µ—Å—è—Ü",
        "–•–æ—á—É –∫–≤–∞—Ä—Ç–∏—Ä—É —Å –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä–æ–º –∏ –ø–∞—Ä–∫–æ–≤–∫–æ–π, –¥–æ 600000 –∑–ª–æ—Ç—ã—Ö"
    ]
    
    for i, query in enumerate(test_queries, 1):
        print(f"\n{'='*100}")
        print(f"–¢–ï–°–¢ {i}")
        print(f"{'='*100}")
        test_llm_extraction_and_search(query)
        print("\n" + "="*100)

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è LLM –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤ –∏ –ø–æ–∏—Å–∫–∞")
    print("="*100)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB
    try:
        client = MongoClient('mongodb://localhost:27017/')
        db = client['real_estate']
        rent_count = db.rent_listings.count_documents({})
        sale_count = db.sale_listings.count_documents({})
        print(f"üìä –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {rent_count} –æ–±—ä—è–≤–ª–µ–Ω–∏–π –∞—Ä–µ–Ω–¥—ã, {sale_count} –æ–±—ä—è–≤–ª–µ–Ω–∏–π –ø—Ä–æ–¥–∞–∂–∏")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB: {e}")
        exit(1)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    test_multiple_queries()
    
    print("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
